{"task_id": "test/0", "prompt": "\n\nclass Ruta():\n", "question": "Define una clase llamada Ruta que tenga un atributo llamado archivo. El artributo archivo es igual al input de la clase. El input dado a la clase se llama ruta.", "entry_point": "test0", "canonical_solution": "class Ruta()\n        def __init__(self, ruta):\n        self.archivo = ruta"}
{"task_id": "test/1", "prompt": "\n\nclass Ruta():\n", "question": "Define una clase llamada Ruta que tenga un atributo llamado archivo. El artributo archivo es igual al input de la clase. El input dado a la clase se llama ruta. Obtén la extensión del atributo archivo. Define un nuevo atributo en la clase llamado entidad que dependiendo de la extensión del archivo instancie una clase ArchivoCSV o una clase ArchivoTXT. No use las librerías os o sys.", "entry_point": "test1", "canonical_solution": "class Ruta()\n        def __init__(self, ruta):\n        self.archivo = ruta\n        ext = self.archivo.split('.')[-1]\n        self.entidad = archivo_aceptado[ext](self.archivo)"}
{"task_id": "test/2", "prompt": "\n\nclass Ruta():\n", "question": "Define una clase llamada Ruta que tenga un atributo llamado archivo. El artributo archivo es igual al input de la clase. El input dado a la clase se llama ruta. Obtén la extensión del atributo archivo. Define un nuevo atributo en la clase llamado entidad que dependiendo de la extensión del archivo instancie una clase ArchivoCSV o una clase ArchivoTXT. Usa una función llamada leer_lineas para leer cada línea del atributo entidad y guárdalo en una variable llamada datos.  Define un nuevo attribute en la clase llamado grafo que usando la variable datos instancie una clase Grafico. No use las librerías os o sys.", "entry_point": "test2", "canonical_solution": "class Ruta()\n        def __init__(self, ruta):\n        self.archivo = ruta\n        ext = self.archivo.split('.')[-1]\n        self.entidad = archivo_aceptado[ext](self.archivo)\n        datos = self.entidad.leer_lineas()\n        self.grafo = Grafico(datos)"}