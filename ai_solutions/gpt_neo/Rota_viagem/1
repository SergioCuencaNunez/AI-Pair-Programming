

class RouteDomain():

QUESTION:
Define a class named RouteDomain that has an atributte called file. The attribute called file is equal to an input given to the class. The input given to the class is called filepath. Obtain the extension of the file. Define a new attribute in the class named file_entity that depending of the extension of the file instances a FileCSV class or a FileTXT class. Use a function called get_lines to read each line of the file_entity and store it in a variable called data.  Define a new attribute in the class named graph that using the variable data instances a Graph class. Do not use os or sys libraries


class RouteDomain():


Use Call-Based Format

ANSWER:
class FileCSV:
	def __init__(self, csv_file):
		self.csv_file = csv_file
		self._is_first_row = False
		self._is_last_row = False
		self._is_comma = False
		self._is_d_char = False
		self._is_i_char = False
		self._is_space = False
		
	@property
	def csv_line(self):
		return self.__import__('re').match(r'\d+$', self.csv_file).group(0)
	
	@property
	def extension(self):
		return self.csv_line.split('.')[-1]
		
	def __str__(self):
		return '{},{}'.format(self.csv_line, self.extension)
	
	def __init__(self, *args, **kwargs):
		super().__init__(*args, **kwargs)        
		self.csv_line = self.__import__('re').sub('\d+$', lambda m: '.' + m.group(1), self.csv_file)
		
	def __import__(self, globals):
		for k, v in globals.items():
			setattr(self, k, v)
		return self
	
class FileTXT:
	def __init__(self, csv_file):
		self.txt_file = csv_file
		self._is_first_row = False
		self._is_last_row = False
		self._is_comma = False
		self._is_d_char = False
		self._is_i_char = False
		self._is_space = False
		
	@property
	def txt_line(self):
		return self.__import__('re').match(r'\d+$', self.txt_file).group(0)
		
	@property
	def extension(self):
		return self.txt_line.split('.')[-1]
		
	def __str__(self):
		return '{},{}'.format(self.txt_line, self.extension)
	
	def __init__(self, *args, **kwargs):
		super().__init__(*args, **kwargs)        
		self.txt_line = self.__import__('re').sub('\d+$', lambda m: '.' + m.group(1), self.txt_file)
<|endoftext|>