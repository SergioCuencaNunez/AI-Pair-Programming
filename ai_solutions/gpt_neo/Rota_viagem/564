

class RouteDomain():

QUESTION:
Define a class named RouteDomain that has an atributte called file. The attribute called file is equal to an input given to the class. The input given to the class is called filepath. Obtain the extension of the file. Define a new attribute in the class named file_entity that depending of the extension of the file instances a FileCSV class or a FileTXT class. Do not use os or sys libraries


class RouteDomain():


Use Call-Based Format

ANSWER:
class RouteDomain():
 
	def __init__(self):
		self.d = {}
		self.file_entity = None
	
	def __setitem__(self, key, value):
		d = self.d
		if key == 'filepath':
			if value == '.':
				value = 'csv'
			if value == 'txt':
				value = 'txt'
			self.d[key] = value
		else:
			if value == '.':
				self.d[key] = 'file'
			else:
				self.d[key] = value
		
		if key == 'file_entity':
			if value == 'file.csv':
				self.file_entity = CSV(value)
			elif value == 'file.txt':
				self.file_entity = Text(value)
			if self.file_entity is not None:
				self.file_entity.setdefault(value, CSV(value))
		
		
	def get_file_ext(self):
		if self.file_entity is None:
			return ''
		return self.file_entity.get('.{}'.format(self.file_entity))
<|endoftext|>