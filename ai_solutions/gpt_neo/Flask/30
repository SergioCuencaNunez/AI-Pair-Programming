from flask import Flask ,request,jsonify, make_response
from flask_restful import Resource, Api
from flask_pymongo import PyMongo
QUESTION:
Using Flask, define a get method to find all users in the pyMongo mongo db users table using the columns name and designation given in the query string. Use /users as the HTTP URL.
from flask import Flask,request,jsonify, make_response
from flask_restful import Resource, Api
from flask_pymongo import PyMongo

Use Call-Based Format

ANSWER:
from collections import defaultdict

# Create the Flask class
@make_response
def users(http_user_id):
	# Get the list of dictionaries in the users table
	result = defaultdict(list)
	result['_id'] = ('name', 'designation')
	result['_rev'] = ('$', '$')
	
	# Get the list of the ids from the users table
	query = http_user_id
	result = defaultdict(list)
	result['users'].append(query)
	
	# Iterate through the result dictionary, if a users id is not in the list of 
	# user ids, add it to the list
	for user_id in result['users']:
		#print(user_id)
		result[user_id]['name'] += ','
		result[user_id]['designation'] += ','
	
	return ','.join(result['users'])

# Create the resource class
@make_response
def users_1(http_user_id):
	# Create the resource class
	result = {http_user_id: users(http_user_id)}
	return result
<|endoftext|>