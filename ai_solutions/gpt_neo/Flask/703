from flask import Flask ,request,jsonify, make_response
from flask_restful import Resource, Api
from flask_pymongo import PyMongo
QUESTION:
Using Flask, define a class named User with a post method to insert a new user to the pyMongo mongo db users table. Obtain name and designation attributes from the request. Use /user as the HTTP URL.
from flask import Flask,request,jsonify, make_response
from flask_restful import Resource, Api
from flask_pymongo import PyMongo

Use Call-Based Format

ANSWER:


class User(object):
	def __init__(self, name, designation):
		self.name = name
		self.designation =designation
		self.password = ''
		self.role = ''
		self.statu = {}
		self.statu[''] = {}
	
	@property
	def name(self):
		return self.name
		
	@property
	def designation(self):
		return self.designation
		
	@staticmethod
	def get_data(endpoint, format=None, id_suffix='', method='get'):
		if format == None:
			return endpoint.json
		if method == 'get':
			return endpoint.text
		return endpoint.pymongo
	
	@staticmethod
	def post_data(endpoint, format=None, id_suffix='', method='post'):
		if format == None:
			return endpoint.json
		if method == 'post':
			return endpoint.text
	
	@staticmethod
	def get_statu(endpoint, format=None, id_suffix='', method='get'):
		if format == None:
			return endpoint.statu
		if method == 'get':
			return endpoint.statu['']
		return endpoint.statu
		
	
	def __init__(self, name, designation, password, role, statu):
		self.name = name
		self.designation = designation
		self.password = password
		self.role = role
		self.statu = statu
<|endoftext|>